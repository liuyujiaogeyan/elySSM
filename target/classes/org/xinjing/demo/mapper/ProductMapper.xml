<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xinjing.demo.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="org.xinjing.demo.domain.Product">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="pimg" jdbcType="VARCHAR" property="pimg" />
    <result column="pdesc" jdbcType="VARCHAR" property="pdesc" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="up_time" jdbcType="TIMESTAMP" property="upTime" />
    <result column="fsid" jdbcType="INTEGER" property="fsid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, pimg, pdesc, price, tid, add_time, up_time, fsid
  </sql>
  <select id="selectByExample" parameterType="org.xinjing.demo.domain.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.xinjing.demo.domain.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xinjing.demo.domain.Product">
    insert into product (pid, pname, pimg, 
      pdesc, price, tid, add_time, 
      up_time, fsid)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{pimg,jdbcType=VARCHAR}, 
      #{pdesc,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{tid,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{upTime,jdbcType=TIMESTAMP}, #{fsid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xinjing.demo.domain.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="pimg != null">
        pimg,
      </if>
      <if test="pdesc != null">
        pdesc,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
      <if test="fsid != null">
        fsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pimg != null">
        #{pimg,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null">
        #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fsid != null">
        #{fsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xinjing.demo.domain.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.pimg != null">
        pimg = #{record.pimg,jdbcType=VARCHAR},
      </if>
      <if test="record.pdesc != null">
        pdesc = #{record.pdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upTime != null">
        up_time = #{record.upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fsid != null">
        fsid = #{record.fsid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      pimg = #{record.pimg,jdbcType=VARCHAR},
      pdesc = #{record.pdesc,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      tid = #{record.tid,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      up_time = #{record.upTime,jdbcType=TIMESTAMP},
      fsid = #{record.fsid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xinjing.demo.domain.Product">
    update product
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pimg != null">
        pimg = #{pimg,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null">
        pdesc = #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fsid != null">
        fsid = #{fsid,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xinjing.demo.domain.Product">
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      pimg = #{pimg,jdbcType=VARCHAR},
      pdesc = #{pdesc,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      tid = #{tid,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      fsid = #{fsid,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.xinjing.demo.domain.Product">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="pimg" jdbcType="VARCHAR" property="pimg" />
    <result column="pdesc" jdbcType="VARCHAR" property="pdesc" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="up_time" jdbcType="TIMESTAMP" property="upTime" />
    <result column="fsid" jdbcType="INTEGER" property="fsid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, pimg, pdesc, price, tid, add_time, up_time, fsid
  </sql>
  <select id="selectByExample" parameterType="org.xinjing.demo.domain.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.xinjing.demo.domain.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xinjing.demo.domain.Product">
    insert into product (pid, pname, pimg, 
      pdesc, price, tid, add_time, 
      up_time, fsid)
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{pimg,jdbcType=VARCHAR}, 
      #{pdesc,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{tid,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{upTime,jdbcType=TIMESTAMP}, #{fsid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xinjing.demo.domain.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="pimg != null">
        pimg,
      </if>
      <if test="pdesc != null">
        pdesc,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="upTime != null">
        up_time,
      </if>
      <if test="fsid != null">
        fsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pimg != null">
        #{pimg,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null">
        #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null">
        #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fsid != null">
        #{fsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xinjing.demo.domain.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.pimg != null">
        pimg = #{record.pimg,jdbcType=VARCHAR},
      </if>
      <if test="record.pdesc != null">
        pdesc = #{record.pdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upTime != null">
        up_time = #{record.upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fsid != null">
        fsid = #{record.fsid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      pimg = #{record.pimg,jdbcType=VARCHAR},
      pdesc = #{record.pdesc,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      tid = #{record.tid,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      up_time = #{record.upTime,jdbcType=TIMESTAMP},
      fsid = #{record.fsid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xinjing.demo.domain.Product">
    update product
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="pimg != null">
        pimg = #{pimg,jdbcType=VARCHAR},
      </if>
      <if test="pdesc != null">
        pdesc = #{pdesc,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upTime != null">
        up_time = #{upTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fsid != null">
        fsid = #{fsid,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xinjing.demo.domain.Product">
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      pimg = #{pimg,jdbcType=VARCHAR},
      pdesc = #{pdesc,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      tid = #{tid,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      up_time = #{upTime,jdbcType=TIMESTAMP},
      fsid = #{fsid,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>