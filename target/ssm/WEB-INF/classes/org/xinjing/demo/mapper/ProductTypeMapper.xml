<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xinjing.demo.mapper.ProductTypeMapper">
  <resultMap id="BaseResultMap" type="org.xinjing.demo.domain.ProductType">
    <id column="ptid" jdbcType="INTEGER" property="ptid" />
    <result column="ptname" jdbcType="VARCHAR" property="ptname" />
    <result column="ptlevel" jdbcType="INTEGER" property="ptlevel" />
    <result column="fparentlevel" jdbcType="INTEGER" property="fparentlevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ptid, ptname, ptlevel, fparentlevel
  </sql>
  <select id="selectByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_type
    where ptid = #{ptid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_type
    where ptid = #{ptid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xinjing.demo.domain.ProductType">
    insert into product_type (ptid, ptname, ptlevel, 
      fparentlevel)
    values (#{ptid,jdbcType=INTEGER}, #{ptname,jdbcType=VARCHAR}, #{ptlevel,jdbcType=INTEGER}, 
      #{fparentlevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xinjing.demo.domain.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ptid != null">
        ptid,
      </if>
      <if test="ptname != null">
        ptname,
      </if>
      <if test="ptlevel != null">
        ptlevel,
      </if>
      <if test="fparentlevel != null">
        fparentlevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ptid != null">
        #{ptid,jdbcType=INTEGER},
      </if>
      <if test="ptname != null">
        #{ptname,jdbcType=VARCHAR},
      </if>
      <if test="ptlevel != null">
        #{ptlevel,jdbcType=INTEGER},
      </if>
      <if test="fparentlevel != null">
        #{fparentlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample" resultType="java.lang.Long">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.ptid != null">
        ptid = #{record.ptid,jdbcType=INTEGER},
      </if>
      <if test="record.ptname != null">
        ptname = #{record.ptname,jdbcType=VARCHAR},
      </if>
      <if test="record.ptlevel != null">
        ptlevel = #{record.ptlevel,jdbcType=INTEGER},
      </if>
      <if test="record.fparentlevel != null">
        fparentlevel = #{record.fparentlevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set ptid = #{record.ptid,jdbcType=INTEGER},
      ptname = #{record.ptname,jdbcType=VARCHAR},
      ptlevel = #{record.ptlevel,jdbcType=INTEGER},
      fparentlevel = #{record.fparentlevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xinjing.demo.domain.ProductType">
    update product_type
    <set>
      <if test="ptname != null">
        ptname = #{ptname,jdbcType=VARCHAR},
      </if>
      <if test="ptlevel != null">
        ptlevel = #{ptlevel,jdbcType=INTEGER},
      </if>
      <if test="fparentlevel != null">
        fparentlevel = #{fparentlevel,jdbcType=INTEGER},
      </if>
    </set>
    where ptid = #{ptid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xinjing.demo.domain.ProductType">
    update product_type
    set ptname = #{ptname,jdbcType=VARCHAR},
      ptlevel = #{ptlevel,jdbcType=INTEGER},
      fparentlevel = #{fparentlevel,jdbcType=INTEGER}
    where ptid = #{ptid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.xinjing.demo.domain.ProductType">
    <id column="ptid" jdbcType="INTEGER" property="ptid" />
    <result column="ptname" jdbcType="VARCHAR" property="ptname" />
    <result column="ptlevel" jdbcType="INTEGER" property="ptlevel" />
    <result column="fparentlevel" jdbcType="INTEGER" property="fparentlevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ptid, ptname, ptlevel, fparentlevel
  </sql>
  <select id="selectByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_type
    where ptid = #{ptid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_type
    where ptid = #{ptid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.xinjing.demo.domain.ProductType">
    insert into product_type (ptid, ptname, ptlevel, 
      fparentlevel)
    values (#{ptid,jdbcType=INTEGER}, #{ptname,jdbcType=VARCHAR}, #{ptlevel,jdbcType=INTEGER}, 
      #{fparentlevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xinjing.demo.domain.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ptid != null">
        ptid,
      </if>
      <if test="ptname != null">
        ptname,
      </if>
      <if test="ptlevel != null">
        ptlevel,
      </if>
      <if test="fparentlevel != null">
        fparentlevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ptid != null">
        #{ptid,jdbcType=INTEGER},
      </if>
      <if test="ptname != null">
        #{ptname,jdbcType=VARCHAR},
      </if>
      <if test="ptlevel != null">
        #{ptlevel,jdbcType=INTEGER},
      </if>
      <if test="fparentlevel != null">
        #{fparentlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.xinjing.demo.domain.ProductTypeExample" resultType="java.lang.Long">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.ptid != null">
        ptid = #{record.ptid,jdbcType=INTEGER},
      </if>
      <if test="record.ptname != null">
        ptname = #{record.ptname,jdbcType=VARCHAR},
      </if>
      <if test="record.ptlevel != null">
        ptlevel = #{record.ptlevel,jdbcType=INTEGER},
      </if>
      <if test="record.fparentlevel != null">
        fparentlevel = #{record.fparentlevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set ptid = #{record.ptid,jdbcType=INTEGER},
      ptname = #{record.ptname,jdbcType=VARCHAR},
      ptlevel = #{record.ptlevel,jdbcType=INTEGER},
      fparentlevel = #{record.fparentlevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.xinjing.demo.domain.ProductType">
    update product_type
    <set>
      <if test="ptname != null">
        ptname = #{ptname,jdbcType=VARCHAR},
      </if>
      <if test="ptlevel != null">
        ptlevel = #{ptlevel,jdbcType=INTEGER},
      </if>
      <if test="fparentlevel != null">
        fparentlevel = #{fparentlevel,jdbcType=INTEGER},
      </if>
    </set>
    where ptid = #{ptid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xinjing.demo.domain.ProductType">
    update product_type
    set ptname = #{ptname,jdbcType=VARCHAR},
      ptlevel = #{ptlevel,jdbcType=INTEGER},
      fparentlevel = #{fparentlevel,jdbcType=INTEGER}
    where ptid = #{ptid,jdbcType=INTEGER}
  </update>
</mapper>